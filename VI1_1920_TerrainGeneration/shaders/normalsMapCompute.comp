#version 430

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout (binding = 0, rgba32f) uniform image2D heightMap;

uniform int texSize;

void main ()
{
	ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
	
	float hPoint = imageLoad(heightMap, pos).x;
	float hNorth, hSouth, hWest, hEast;
	
	if (pos.y < 1) {
		hNorth = imageLoad(heightMap, ivec2(pos.x, texSize - 1)).x;
	} else {
		hNorth = imageLoad(heightMap, ivec2(pos.x, pos.y - 1)).x;
	}
	if (pos.y >= texSize - 1) {
		hSouth = imageLoad(heightMap, ivec2(pos.x, 0)).x;
	} else {
		hSouth = imageLoad(heightMap, ivec2(pos.x, pos.y + 1)).x;
	}
	if (pos.x < 1) {
		hWest = imageLoad(heightMap, ivec2(pos.x - 1, pos.y)).x;
	} else {
		hWest = imageLoad(heightMap, ivec2(texSize - 1, pos.y)).x;
	}
	if (pos.x >= texSize - 1) {
		hEast = imageLoad(heightMap, ivec2(0, pos.y)).x;
	} else {
		hEast = imageLoad(heightMap, ivec2(pos.x + 1, pos.y)).x;
	}
	
	vec3 pNorth = vec3(pos.x, hNorth, pos.y - 1);
	vec3 pSouth = vec3(pos.x, hSouth, pos.y + 1);
	vec3 pWest = vec3(pos.x - 1, hWest, pos.y);
	vec3 pEast = vec3(pos.x + 1, hEast, pos.y);
	
	vec3 v1 = normalize(pSouth - pNorth);
	vec3 v2 = normalize(pEast - pWest);
	
	vec3 pNormal = normalize(v1 * v2);
	
	imageStore(heightMap, pos, vec4(hPoint, pNormal));
}